{"version":3,"sources":["redux/auth-reducer.js","serviceWorker.js","components/Navbar/Navbar.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","hoc/withSuspense.js","App.js","index.js","assets/images/preloader.gif","components/Common/Preloader/Preloader.js","components/Header/Header.module.css","redux/profile-reducer.js","redux/dialogs-reducer.js","components/Navbar/Navbar.module.css","utils/object-helpers.js","redux/users-reducer.js","api/api.js"],"names":["SET_USER_DATA","initialState","userId","email","login","isAuth","setAuthUserData","type","payload","getAuthUserData","dispatch","a","authAPI","me","response","data","resultCode","id","password","rememberMe","message","messages","length","stopSubmit","_error","logout","authReducer","state","action","Boolean","window","location","hostname","match","Navbar","className","s","nav","item","NavLink","to","activeClassName","active","friends","Header","props","header","src","loginBlock","onClick","HeaderContainer","this","React","Component","connect","auth","INITIALIZED_SUCCESS","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","sidebar","usersPage","usersReducer","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","withSuspense","Suspense","fallback","Preloader","DialogsContainer","lazy","ProfileContainer","UsersContainer","LoginPage","App","initializeApp","Route","path","render","AppContainer","withRouter","promise","Promise","all","then","SamuraiJSApp","BrowserRouter","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","style","backgroundColor","preloader","module","exports","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","posts","likesCount","profile","status","addPostActionCreator","newPostText","setStatus","getUserProfile","usersAPI","getProfile","getStatus","profileAPI","updateStatus","newPost","filter","p","SEND_MESSAGE","dialogs","name","sendMessageCreator","newMessageBody","body","updateObjectInArray","items","itemsId","objPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","requestUsers","page","getUsers","totalCount","count","followUnfollowFlow","apiMethod","actionCreator","follow","bind","unfollow","followed","instance","axios","withCredentials","baseURL","headers","get","post","delete","console","warn","profilAPI","put"],"mappings":"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","file":"static/js/main.81b028e0.chunk.js","sourcesContent":["import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'auth/SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {userId, email, login, isAuth}\r\n})\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error';\r\n        dispatch(stopSubmit('login', {_error: message}));\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n\r\n    let response = await authAPI.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport default authReducer;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return <nav className={s.nav}>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink>\r\n        </div>\r\n        <div className={`${s.item} ${s.active}`}>\r\n            <NavLink to=\"/dialogs\" activeClassName={s.active}>Messages</NavLink>\r\n        </div>\r\n        <div className={`${s.item} ${s.active}`}>\r\n            <NavLink to=\"/users\" activeClassName={s.active}>Users</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/news\" activeClassName={s.active}>News</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/music\" activeClassName={s.active}>Music</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/settings\" activeClassName={s.active}>Settings</NavLink>\r\n        </div>\r\n        <div className={`${s.item} ${s.friends}`}>\r\n            <NavLink to=\"/friends\" activeClassName={s.active}>Friends</NavLink>\r\n        </div>\r\n    </nav>\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport NavLink from \"react-router-dom/NavLink\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTskF1ENMQmiosFwUfUir1_F_A9iymAa2w62A&usqp=CAU'/>\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth\r\n                ? <div>{props.login} - <button onClick={props.logout}>Log out</button> </div>\r\n                : <NavLink to={'/login'}>Login</NavLink>}\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout}) (HeaderContainer);","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS})\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    //dispatch();\r\n    //dispatch();\r\n    Promise.all([promise])\r\n        .then(() => {\r\n        dispatch(initializedSuccess());\r\n    })\r\n\r\n}\r\n\r\nexport default appReducer;\r\n","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nwindow.__store__ = store;\r\n\r\n\r\nexport default store;","import React from \"react\";\r\nimport Preloader from \"../components/Common/Preloader/Preloader\";\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<Preloader />}>\r\n            <Component {...props} />\r\n        </React.Suspense>\r\n    };\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport {BrowserRouter, Route, withRouter} from 'react-router-dom';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport {connect, Provider} from 'react-redux';\r\nimport {compose} from 'redux';\r\nimport {initializeApp} from './redux/app-reducer';\r\nimport Preloader from './components/Common/Preloader/Preloader';\r\nimport store from './redux/redux-store';\r\nimport {withSuspense} from './hoc/withSuspense';\r\n//import ProfileContainer from \"./components/Profile/ProfileContainer\";\r\n//import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\n//import UsersContainer from \"./components/Users/UsersContainer\";\r\n//import LoginPage from \"./components/Login/Login\";\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\r\nconst LoginPage = React.lazy(() => import('./components/Login/Login'));\r\n\r\nclass App extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n\r\n        return (\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div className='app-wrapper-content'>\r\n                    <Route path='/dialogs'\r\n                           render={withSuspense(DialogsContainer)} />\r\n\r\n                    <Route path='/profile/:userId?'\r\n                           render={withSuspense(ProfileContainer)} />\r\n\r\n                    <Route path='/users'\r\n                           render={withSuspense(UsersContainer)} />\r\n\r\n                    <Route path='/login'\r\n                           render={withSuspense(LoginPage)} />\r\n\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nlet AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App);\r\n\r\nconst SamuraiJSApp = (props) => {\r\n    return <BrowserRouter>\r\n        <Provider store={store}>\r\n            <AppContainer/>\r\n        </Provider>\r\n    </BrowserRouter>\r\n}\r\n\r\nexport default SamuraiJSApp;","import * as serviceWorker from './serviceWorker';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport SamuraiJSApp from \"./App\";\r\n\r\nReactDOM.render(\r\n    <SamuraiJSApp/>, document.getElementById('root'));\r\n\r\n\r\n// API\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","export default __webpack_public_path__ + \"static/media/preloader.e9202c75.gif\";","import React from \"react\";\r\nimport preloader from \"../../../assets/images/preloader.gif\";\r\n\r\nlet Preloader = (props) => {\r\n    return <div  style={ { backgroundColor: 'white' } }>\r\n        <img src={preloader} />\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2jKXE\",\"loginBlock\":\"Header_loginBlock__1R4wa\"};","import {profilAPI as profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: 'Hey', likesCount: 11},\r\n        {id: 4, message: 'Laley', likesCount: 11}\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        }\r\n        case DELETE_POST: {\r\n\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id != action.id)\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\nexport const deletePost = (id) => ({type: DELETE_POST, id})\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n\r\n    let response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data));\r\n}\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\n\r\n\r\nexport default profileReducer;","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrew'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Viktor'},\r\n        {id: 6, name: 'Valera'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'Hey'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return  {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\nexport default dialogsReducer;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3XJgB\",\"item\":\"Navbar_item__3WK2U\",\"active\":\"Navbar_active__3St4h\",\"friends\":\"Navbar_friends__2haTm\"};","export const updateObjectInArray = (items, itemsId, objPropName, newObjProps) => {\r\n    return  items.map(u => {\r\n        if (u[objPropName] === itemsId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\r\n                /*users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })*/\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\r\n                /*users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })*/\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess)\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\r\n    }\r\n}\r\n\r\nexport default usersReducer;\r\n","import * as axios from \"axios\"\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': 'fcfbce9d-b05b-4202-9d0e-954e03742426'\r\n    }\r\n});\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return  instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return  instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please profileAPI object.')\r\n        return  profilAPI.getProfile(userId);\r\n    }\r\n}\r\nexport const profilAPI = {\r\n    getProfile(userId) {\r\n        return  instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, { status: status });\r\n    }\r\n}\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}\r\n\r\n"],"sourceRoot":""}