{"version":3,"sources":["components/Common/FormsControls/FormsControls.module.css","components/Common/FormsControls/FormsControls.js","utils/validators/validators.js","components/Dialogs/Dialogs.module.css","hoc/withAuthRedirect.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","FormControl","input","meta","props","child","hasError","touched","error","className","styles","formControl","children","Textarea","restProps","Input","createField","placeholder","name","validators","component","text","validate","required","value","maxLengthCreator","maxLength","length","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","DialogItem","path","id","s","dialog","active","NavLink","Message","message","maxLength50","reduxForm","form","onSubmit","handleSubmit","Field","Dialogs","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","newMessageBody","dialogsItems","values","sendMessage","Redirect","compose","dispatch","sendMessageCreator"],"mappings":"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","file":"static/js/6.ba6346c8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__sVQLx\",\"error\":\"FormsControls_error__1-gBo\",\"formSummaryError\":\"FormsControls_formSummaryError__3lsER\"};","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\"\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta, child, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : ' ')}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            { hasError && <span>{meta.error}</span>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n)","export const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__8NFHs\",\"dialogsItems\":\"Dialogs_dialogsItems__35SOZ\",\"active\":\"Dialogs_active__H44rW\",\"messages\":\"Dialogs_messages__1-8Gz\",\"message\":\"Dialogs_message__1152w\"};","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'login'}/>\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from \"react\";\r\nimport s from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from './../Dialogs.module.css'\r\n\r\n\r\nconst Message = (props) => {\r\n\r\n    return <div className={s.dialog}>{props.message}</div>\r\n\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport handleSubmit from \"redux-form/lib/handleSubmit\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../Common/FormsControls/FormsControls\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       validate={[required, maxLength50]}\r\n                       name='newMessageBody'\r\n                       placeholder='Enter your message'/>\r\n            </div>\r\n            <div><button>Send</button></div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm);","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map( d => <DialogItem name={d.name} key={d.id} id={d.id} />  );\r\n    let messagesElements = state.messages.map( m => <Message message={m.message} key={m.id} /> );\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={'login'}/>\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                { dialogsElements }\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{ messagesElements }</div>\r\n                <AddMessageForm onSubmit={addNewMessage} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n) (Dialogs);"],"sourceRoot":""}